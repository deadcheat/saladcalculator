{"version":3,"sources":["saladcalculator/node_modules/hyperapp/src/index.js","saladcalculator/src/index.tsx"],"names":["h","name","attributes","length","rest","children","arguments","push","node","pop","key","app","state","actions","view","container","map","skipRender","rootElement","oldNode","recycleElement","element","nodeName","toLowerCase","call","childNodes","nodeType","nodeValue","lifecycle","isRecycling","globalState","clone","wiredActions","wireStateToActions","path","action","data","result","getPartialState","then","setPartialState","concat","scheduleRender","resolveNode","render","patch","parent","isSvg","newElement","createElement","document","createTextNode","createElementNS","oncreate","i","appendChild","insertBefore","updateElement","oldAttributes","cb","onupdate","oldKeyed","newKeyed","oldElements","oldChildren","oldKey","getKey","k","newKey","keyedNode","target","source","out","value","slice","eventListener","event","currentTarget","events","type","updateAttribute","oldValue","style","setProperty","addEventListener","removeEventListener","setAttribute","removeAttribute","removeElement","done","removeChild","removeChildren","ondestroy","onremove"],"mappings":"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","file":"src.f22a4a51.map","sourceRoot":"../..","sourcesContent":["export function h(name, attributes) {\n  var rest = []\n  var children = []\n  var length = arguments.length\n\n  while (length-- > 2) rest.push(arguments[length])\n\n  while (rest.length) {\n    var node = rest.pop()\n    if (node && node.pop) {\n      for (length = node.length; length--; ) {\n        rest.push(node[length])\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(node)\n    }\n  }\n\n  return typeof name === \"function\"\n    ? name(attributes || {}, children)\n    : {\n        nodeName: name,\n        attributes: attributes || {},\n        children: children,\n        key: attributes && attributes.key\n      }\n}\n\nexport function app(state, actions, view, container) {\n  var map = [].map\n  var rootElement = (container && container.children[0]) || null\n  var oldNode = rootElement && recycleElement(rootElement)\n  var lifecycle = []\n  var skipRender\n  var isRecycling = true\n  var globalState = clone(state)\n  var wiredActions = wireStateToActions([], globalState, clone(actions))\n\n  scheduleRender()\n\n  return wiredActions\n\n  function recycleElement(element) {\n    return {\n      nodeName: element.nodeName.toLowerCase(),\n      attributes: {},\n      children: map.call(element.childNodes, function(element) {\n        return element.nodeType === 3 // Node.TEXT_NODE\n          ? element.nodeValue\n          : recycleElement(element)\n      })\n    }\n  }\n\n  function resolveNode(node) {\n    return typeof node === \"function\"\n      ? resolveNode(node(globalState, wiredActions))\n      : node != null\n        ? node\n        : \"\"\n  }\n\n  function render() {\n    skipRender = !skipRender\n\n    var node = resolveNode(view)\n\n    if (container && !skipRender) {\n      rootElement = patch(container, rootElement, oldNode, (oldNode = node))\n    }\n\n    isRecycling = false\n\n    while (lifecycle.length) lifecycle.pop()()\n  }\n\n  function scheduleRender() {\n    if (!skipRender) {\n      skipRender = true\n      setTimeout(render)\n    }\n  }\n\n  function clone(target, source) {\n    var out = {}\n\n    for (var i in target) out[i] = target[i]\n    for (var i in source) out[i] = source[i]\n\n    return out\n  }\n\n  function setPartialState(path, value, source) {\n    var target = {}\n    if (path.length) {\n      target[path[0]] =\n        path.length > 1\n          ? setPartialState(path.slice(1), value, source[path[0]])\n          : value\n      return clone(source, target)\n    }\n    return value\n  }\n\n  function getPartialState(path, source) {\n    var i = 0\n    while (i < path.length) {\n      source = source[path[i++]]\n    }\n    return source\n  }\n\n  function wireStateToActions(path, state, actions) {\n    for (var key in actions) {\n      typeof actions[key] === \"function\"\n        ? (function(key, action) {\n            actions[key] = function(data) {\n              var result = action(data)\n\n              if (typeof result === \"function\") {\n                result = result(getPartialState(path, globalState), actions)\n              }\n\n              if (\n                result &&\n                result !== (state = getPartialState(path, globalState)) &&\n                !result.then // !isPromise\n              ) {\n                scheduleRender(\n                  (globalState = setPartialState(\n                    path,\n                    clone(state, result),\n                    globalState\n                  ))\n                )\n              }\n\n              return result\n            }\n          })(key, actions[key])\n        : wireStateToActions(\n            path.concat(key),\n            (state[key] = clone(state[key])),\n            (actions[key] = clone(actions[key]))\n          )\n    }\n\n    return actions\n  }\n\n  function getKey(node) {\n    return node ? node.key : null\n  }\n\n  function eventListener(event) {\n    return event.currentTarget.events[event.type](event)\n  }\n\n  function updateAttribute(element, name, value, oldValue, isSvg) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      for (var i in clone(oldValue, value)) {\n        var style = value == null || value[i] == null ? \"\" : value[i]\n        if (i[0] === \"-\") {\n          element[name].setProperty(i, style)\n        } else {\n          element[name][i] = style\n        }\n      }\n    } else {\n      if (name[0] === \"o\" && name[1] === \"n\") {\n        name = name.slice(2)\n\n        if (element.events) {\n          if (!oldValue) oldValue = element.events[name]\n        } else {\n          element.events = {}\n        }\n\n        element.events[name] = value\n\n        if (value) {\n          if (!oldValue) {\n            element.addEventListener(name, eventListener)\n          }\n        } else {\n          element.removeEventListener(name, eventListener)\n        }\n      } else if (name in element && name !== \"list\" && !isSvg) {\n        element[name] = value == null ? \"\" : value\n      } else if (value != null && value !== false) {\n        element.setAttribute(name, value)\n      }\n\n      if (value == null || value === false) {\n        element.removeAttribute(name)\n      }\n    }\n  }\n\n  function createElement(node, isSvg) {\n    var element =\n      typeof node === \"string\" || typeof node === \"number\"\n        ? document.createTextNode(node)\n        : (isSvg = isSvg || node.nodeName === \"svg\")\n          ? document.createElementNS(\n              \"http://www.w3.org/2000/svg\",\n              node.nodeName\n            )\n          : document.createElement(node.nodeName)\n\n    var attributes = node.attributes\n    if (attributes) {\n      if (attributes.oncreate) {\n        lifecycle.push(function() {\n          attributes.oncreate(element)\n        })\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(\n          createElement(\n            (node.children[i] = resolveNode(node.children[i])),\n            isSvg\n          )\n        )\n      }\n\n      for (var name in attributes) {\n        updateAttribute(element, name, attributes[name], null, isSvg)\n      }\n    }\n\n    return element\n  }\n\n  function updateElement(element, oldAttributes, attributes, isSvg) {\n    for (var name in clone(oldAttributes, attributes)) {\n      if (\n        attributes[name] !==\n        (name === \"value\" || name === \"checked\"\n          ? element[name]\n          : oldAttributes[name])\n      ) {\n        updateAttribute(\n          element,\n          name,\n          attributes[name],\n          oldAttributes[name],\n          isSvg\n        )\n      }\n    }\n\n    var cb = isRecycling ? attributes.oncreate : attributes.onupdate\n    if (cb) {\n      lifecycle.push(function() {\n        cb(element, oldAttributes)\n      })\n    }\n  }\n\n  function removeChildren(element, node) {\n    var attributes = node.attributes\n    if (attributes) {\n      for (var i = 0; i < node.children.length; i++) {\n        removeChildren(element.childNodes[i], node.children[i])\n      }\n\n      if (attributes.ondestroy) {\n        attributes.ondestroy(element)\n      }\n    }\n    return element\n  }\n\n  function removeElement(parent, element, node) {\n    function done() {\n      parent.removeChild(removeChildren(element, node))\n    }\n\n    var cb = node.attributes && node.attributes.onremove\n    if (cb) {\n      cb(element, done)\n    } else {\n      done()\n    }\n  }\n\n  function patch(parent, element, oldNode, node, isSvg) {\n    if (node === oldNode) {\n    } else if (oldNode == null || oldNode.nodeName !== node.nodeName) {\n      var newElement = createElement(node, isSvg)\n      parent.insertBefore(newElement, element)\n\n      if (oldNode != null) {\n        removeElement(parent, element, oldNode)\n      }\n\n      element = newElement\n    } else if (oldNode.nodeName == null) {\n      element.nodeValue = node\n    } else {\n      updateElement(\n        element,\n        oldNode.attributes,\n        node.attributes,\n        (isSvg = isSvg || node.nodeName === \"svg\")\n      )\n\n      var oldKeyed = {}\n      var newKeyed = {}\n      var oldElements = []\n      var oldChildren = oldNode.children\n      var children = node.children\n\n      for (var i = 0; i < oldChildren.length; i++) {\n        oldElements[i] = element.childNodes[i]\n\n        var oldKey = getKey(oldChildren[i])\n        if (oldKey != null) {\n          oldKeyed[oldKey] = [oldElements[i], oldChildren[i]]\n        }\n      }\n\n      var i = 0\n      var k = 0\n\n      while (k < children.length) {\n        var oldKey = getKey(oldChildren[i])\n        var newKey = getKey((children[k] = resolveNode(children[k])))\n\n        if (newKeyed[oldKey]) {\n          i++\n          continue\n        }\n\n        if (newKey != null && newKey === getKey(oldChildren[i + 1])) {\n          if (oldKey == null) {\n            removeElement(element, oldElements[i], oldChildren[i])\n          }\n          i++\n          continue\n        }\n\n        if (newKey == null || isRecycling) {\n          if (oldKey == null) {\n            patch(element, oldElements[i], oldChildren[i], children[k], isSvg)\n            k++\n          }\n          i++\n        } else {\n          var keyedNode = oldKeyed[newKey] || []\n\n          if (oldKey === newKey) {\n            patch(element, keyedNode[0], keyedNode[1], children[k], isSvg)\n            i++\n          } else if (keyedNode[0]) {\n            patch(\n              element,\n              element.insertBefore(keyedNode[0], oldElements[i]),\n              keyedNode[1],\n              children[k],\n              isSvg\n            )\n          } else {\n            patch(element, oldElements[i], null, children[k], isSvg)\n          }\n\n          newKeyed[newKey] = children[k]\n          k++\n        }\n      }\n\n      while (i < oldChildren.length) {\n        if (getKey(oldChildren[i]) == null) {\n          removeElement(element, oldElements[i], oldChildren[i])\n        }\n        i++\n      }\n\n      for (var i in oldKeyed) {\n        if (!newKeyed[i]) {\n          removeElement(element, oldKeyed[i][0], oldKeyed[i][1])\n        }\n      }\n    }\n    return element\n  }\n}\n","import { h, app } from \"hyperapp\"\nimport 'bulma/css/bulma.css'\n\nimport * as logo from './assets/salad_small.png'\n\ninterface ToppingKV {\n    [index: number]: number\n}\n\nconst toppingCountMap: ToppingKV = {\n    1: 0,\n    2: 0,\n    3: 0,\n    4: 0,\n    5: 0,\n    6: 0,\n    7: 0,\n    8: 0,\n    9: 0,\n    10: 0,\n    11: 0,\n    12: 0,\n    13: 0,\n    14: 0,\n    15: 0,\n    16: 0,\n    17: 0,\n    18: 0,\n    19: 0,\n    20: 0,\n    21: 0,\n    22: 0,\n    23: 0,\n    24: 0,\n    25: 0,\n    26: 0,\n    27: 0,\n    28: 0,\n    29: 0,\n    30: 0,\n    31: 0,\n    32: 0,\n    33: 0,\n    34: 0,\n    35: 0,\n    36: 0,\n    37: 0,\n    38: 0,\n    39: 0,\n    40: 0,\n}\n\nconst state = {\n    total: 0,\n    countMap: {\n        \"base\": 0,\n        \"topping\": 0,\n        \"dressing\": 0,\n    },\n    toppingCountMap: toppingCountMap,\n}\n\nconst baseIds = [1, 2, 3]\n\nconst baseCalorieMap: ToppingKV = {\n    1: 22,\n    2: 14,\n    3: 270,\n}\n\nconst toppingIds = [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]\n\nvar toppingCalorieMap: ToppingKV = {\n    4: 70,\n    5: 60,\n    6: 85,\n    7: 85,\n    8: 100,\n    9: 8,\n    10: 9,\n    11: 20,\n    12: 14,\n    13: 10,\n    14: 16,\n    15: 1,\n    16: 1,\n    17: 29,\n    18: 4,\n    19: 16,\n    20: 51,\n    21: 55,\n    22: 38,\n    23: 34,\n}\n\nconst premiumIds = [24, 25, 26, 27, 28, 29]\n\nconst premiumCalorieMap: ToppingKV = {\n    24: 127,\n    25: 157,\n    26: 89,\n    27: 83,\n    28: 52,\n    29: 47,\n}\n\nconst dressingIds = [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]\n\nconst dressingCalorieMap: ToppingKV = {\n    30: 118,\n    31: 92,\n    32: 122,\n    33: 91,\n    34: 111,\n    35: 191,\n    36: 70,\n    37: 153,\n    38: 228,\n    39: 2,\n    40: 2,\n}\n\ninterface ToppingNameTuple {\n    [index: number]: string\n}\n\nconst toppingNameMapper: ToppingNameTuple = {\n    1: \"ロメインレタス\",\n    2: \"ほうれん草\",\n    3: \"ワイルドライス＋雑穀米\",\n    4: \"自家製クルトン\",\n    5: \"レーズン\",\n    6: \"サンフラワーシード\",\n    7: \"アーモンド\",\n    8: \"ウォルナッツ\",\n    9: \"スナップエンドウ\",\n    10: \"セロリ\",\n    11: \"キャロット\",\n    12: \"赤玉ねぎ\",\n    13: \"トマト\",\n    14: \"赤キャベツ\",\n    15: \"シラントロ\",\n    16: \"バジル\",\n    17: \"アップル\",\n    18: \"オレンジ\",\n    19: \"スパイシーブロッコリ\",\n    20: \"グリルドコーン\",\n    21: \"ブラックビーンズ\",\n    22: \"ハードボイルド・エッグ\",\n    23: \"ロースト豆腐\",\n    24: \"グリルドチキン\",\n    25: \"自家製ハム\",\n    26: \"アボカド\",\n    27: \"ホワイトチェダーチーズ\",\n    28: \"フェタチーズ\",\n    29: \"パルメザンチーズ\",\n    30: \"バルサミックビネグレット\",\n    31: \"バターミルクランチ\",\n    32: \"クリーミーシラチャー\",\n    33: \"メキシカンハニービネグレット\",\n    34: \"シーザー\",\n    35: \"レモンタヒに\",\n    36: \"バジルオニオン\",\n    37: \"キャロットチリビネグレット\",\n    38: \"EXバージンオリーブオイル\",\n    39: \"レモンスクイーズ\",\n    40: \"ライムスクイーズ\",\n}\n\ntype State = typeof state\n\nconst actions = {\n    addTopping: (tId: number) => (state: State) => {\n        state.countMap.topping = state.countMap.topping + toppingCalorieMap[tId]\n        state.toppingCountMap[tId] = state.toppingCountMap[tId] + 1\n        return\n    },\n    removeTopping: (tId: number) => (state: State) => {\n        if (state.toppingCountMap[tId] == 0) {\n            return\n        }\n        state.countMap.topping = state.countMap.topping - toppingCalorieMap[tId]\n        state.toppingCountMap[tId] = state.toppingCountMap[tId] - 1\n        return\n    },\n    addPremiumTopping: (tId: number) => (state: State) => {\n        state.countMap.topping = state.countMap.topping + premiumCalorieMap[tId]\n        state.toppingCountMap[tId] = state.toppingCountMap[tId] + 1\n        return\n    },\n    removePremiumTopping: (tId: number) => (state: State) => {\n        if (state.toppingCountMap[tId] == 0) {\n            return\n        }\n        state.countMap.topping = state.countMap.topping - premiumCalorieMap[tId]\n        state.toppingCountMap[tId] = state.toppingCountMap[tId] - 1\n        return\n    },\n    setDressing: (tId: number) => (state: State) => {\n        if (tId == 0 || dressingCalorieMap[tId] == 0) {\n            return\n        }\n        state.countMap.dressing = dressingCalorieMap[tId]\n        return\n    },\n    setBase: (tId: number) => (state: State) => {\n        console.log(tId)\n        if (tId == 0 || baseCalorieMap[tId] == 0) {\n            return\n        }\n        state.countMap.base = baseCalorieMap[tId]\n        return\n    },\n    sum: () => (state: State) => {\n        state.total = state.countMap.base + state.countMap.dressing + state.countMap.topping\n        return state\n    },\n    total: () => (total: number) => (\n        state.countMap.base + state.countMap.dressing + state.countMap.topping\n    ),\n    name: (tId: number) => (name: string) => {\n        return toppingNameMapper[tId]\n    },\n    toppingCount: (tId: number) => (count: number) => {\n        return state.toppingCountMap[tId]\n    },\n    toppingCalorie: (tId: number) => (count: number) => {\n        return toppingCalorieMap[tId]\n    },\n    premiumToppingCalorie: (tId: number) => (count: number) => {\n        return premiumCalorieMap[tId]\n    },\n}\n\ntype Actions = typeof actions\n\nconst view = (state: State, actions: Actions) => (\n    <div className=\"container\">\n        <nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n            <div class=\"navbar-brand\">\n                <div class=\"navbar-item\" href=\"\">\n                    <img src={logo.default} alt=\"icon is here\" width=\"32\" height=\"28\" />&nbsp;カスタムサラダのカロリー計算するやーつ\n                </div>\n            </div>\n        </nav>\n        <div>\n            <header>\n                <section class=\"section hero is-bold is-danger\">\n                    <div class=\"hero-body\">\n                        <div class=\"container\">\n                            <div class=\"title is-bold is-danger\">このサラダのカロリー：{actions.total} KCal</div>\n                        </div>\n                    </div>\n                </section>\n            </header>\n            <table class=\"table is-fullwidth\">\n                <tr>\n                    <td>\n                        <div class=\"field\">\n                            <label class=\"label\">サラダのベースを選びます</label>\n                            <div class=\"select\">\n                                <form name=\"baseform\">\n                                    <select name=\"base\" onchange={(e: Event) => { (actions.setBase(document.baseform.base.options[document.baseform.base.selectedIndex].value)) }}>\n                                        <option value=\"0\" selected>お選びください</option>\n                                        {\n                                            baseIds.map((tId: number) => (\n                                                <option value={tId}>{() => (actions.name(tId))}</option>\n                                            ))\n                                        }\n                                    </select>\n                                </form>\n                            </div>\n                        </div>\n                    </td>\n                    <td>\n                        <div class=\"field\">\n                            <label class=\"label\">ドレッシングを選びます</label>\n                            <div class=\"select\">\n                                <form name=\"dressingform\">\n                                    <select name=\"dressing\" onchange={(e: Event) => { (actions.setDressing(document.dressingform.dressing.options[document.dressingform.dressing.selectedIndex].value)) }}>\n                                        <option value=\"0\" selected>お選びください</option>\n                                        {\n                                            dressingIds.map((tId: number) => (\n                                                <option value={tId}>{() => (actions.name(tId))}</option>\n                                            ))\n                                        }\n                                    </select>\n                                </form>\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n            </table>\n            <div class=\"field\">\n                <label class=\"label\">トッピングを選びます（４つまで無料）</label>\n                <table className=\"table is-striped is-hoverable is-fullwidth\">\n                    <thead>\n                        <tr>\n                            <th>トッピング</th>\n                            <th>１単位あたりのカロリー</th>\n                            <th>個数</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            toppingIds.map((tId: number) => (\n                                <tr>\n                                    <td>{() => (actions.name(tId))}</td>\n                                    <td>{() => (actions.toppingCalorie(tId))}&nbsp;KCal</td>\n                                    <td>{() => (actions.toppingCount(tId))}&nbsp;\n                                    <button onclick={() => (actions.addTopping(tId))}>&nbsp;+&nbsp;</button>&nbsp;\n                                    <button onclick={() => (actions.removeTopping(tId))}>&nbsp;-&nbsp;</button>\n                                    </td>\n                                </tr>\n                            ))\n                        }\n                    </tbody>\n                </table>\n            </div>\n            <div class=\"field\">\n                <label class=\"label\">プレミアムトッピングを選びます（追加料金がかかります）</label>\n                <table className=\"table is-striped is-hoverable is-fullwidth\">\n                    <thead>\n                        <tr>\n                            <th>トッピング</th>\n                            <th>１単位あたりのカロリー</th>\n                            <th>個数</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            premiumIds.map((tId: number) => (\n                                <tr>\n                                    <td>{() => (actions.name(tId))}</td>\n                                    <td>{() => (actions.premiumToppingCalorie(tId))}&nbsp;KCal</td>\n                                    <td>{() => (actions.toppingCount(tId))}&nbsp;\n                                    <button onclick={() => (actions.addPremiumTopping(tId))}>&nbsp;+&nbsp;</button>&nbsp;\n                                    <button onclick={() => (actions.removePremiumTopping(tId))}>&nbsp;-&nbsp;</button>\n                                    </td>\n                                </tr>\n                            ))\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div >\n)\n\nconst main = app<State, Actions>(state, actions, view, document.body)\n"]}